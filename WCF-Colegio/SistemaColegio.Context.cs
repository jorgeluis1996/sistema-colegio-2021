

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace WCF_Colegio
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class BDCOLEGIOEntities : DbContext
{
    public BDCOLEGIOEntities()
        : base("name=BDCOLEGIOEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<ALUMNO> ALUMNO { get; set; }

    public virtual DbSet<DOCENTE> DOCENTE { get; set; }

    public virtual DbSet<PERMISOS> PERMISOS { get; set; }

    public virtual DbSet<ROL> ROL { get; set; }

    public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }

    public virtual DbSet<USUARIO> USUARIO { get; set; }

    public virtual DbSet<Distrito> Distrito { get; set; }

    public virtual DbSet<Notas> Notas { get; set; }

    public virtual DbSet<GRADO> GRADO { get; set; }

    public virtual DbSet<PERIODO> PERIODO { get; set; }

    public virtual DbSet<NIVEL> NIVEL { get; set; }

    public virtual DbSet<CURSO> CURSO { get; set; }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }


    public virtual ObjectResult<usp_ActualizarPermisos_Result> usp_ActualizarPermisos(string detalle, ObjectParameter resultado)
    {

        var detalleParameter = detalle != null ?
            new ObjectParameter("Detalle", detalle) :
            new ObjectParameter("Detalle", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ActualizarPermisos_Result>("usp_ActualizarPermisos", detalleParameter, resultado);
    }


    public virtual int usp_AsginarCursos(string xml, ObjectParameter resultado)
    {

        var xmlParameter = xml != null ?
            new ObjectParameter("xml", xml) :
            new ObjectParameter("xml", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AsginarCursos", xmlParameter, resultado);
    }


    public virtual ObjectResult<string> usp_DetalleDocenteCurso()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_DetalleDocenteCurso");
    }


    public virtual int usp_EditarAlumno(Nullable<int> idAlumno, string codigo, string nombres, string apellidos, string documentoIdentidad, Nullable<System.DateTime> fechaNacimiento, string sexo, Nullable<int> ciudad, string direccion, Nullable<bool> activo, string usuario)
    {

        var idAlumnoParameter = idAlumno.HasValue ?
            new ObjectParameter("IdAlumno", idAlumno) :
            new ObjectParameter("IdAlumno", typeof(int));


        var codigoParameter = codigo != null ?
            new ObjectParameter("Codigo", codigo) :
            new ObjectParameter("Codigo", typeof(string));


        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var fechaNacimientoParameter = fechaNacimiento.HasValue ?
            new ObjectParameter("FechaNacimiento", fechaNacimiento) :
            new ObjectParameter("FechaNacimiento", typeof(System.DateTime));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var ciudadParameter = ciudad.HasValue ?
            new ObjectParameter("Ciudad", ciudad) :
            new ObjectParameter("Ciudad", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        var usuarioParameter = usuario != null ?
            new ObjectParameter("Usuario", usuario) :
            new ObjectParameter("Usuario", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditarAlumno", idAlumnoParameter, codigoParameter, nombresParameter, apellidosParameter, documentoIdentidadParameter, fechaNacimientoParameter, sexoParameter, ciudadParameter, direccionParameter, activoParameter, usuarioParameter);
    }


    public virtual int usp_EditarCurso(Nullable<int> idCurso, string descripcion, Nullable<bool> activo)
    {

        var idCursoParameter = idCurso.HasValue ?
            new ObjectParameter("IdCurso", idCurso) :
            new ObjectParameter("IdCurso", typeof(int));


        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditarCurso", idCursoParameter, descripcionParameter, activoParameter);
    }


    public virtual int usp_EditarDocente(Nullable<int> idDocente, string codigo, string documentoIdentidad, string nombres, string apellidos, Nullable<System.DateTime> fechaNacimiento, string sexo, string gradoEstudio, Nullable<int> ciudad, string direccion, string email, string numeroTelefono, Nullable<bool> activo, string usuario)
    {

        var idDocenteParameter = idDocente.HasValue ?
            new ObjectParameter("IdDocente", idDocente) :
            new ObjectParameter("IdDocente", typeof(int));


        var codigoParameter = codigo != null ?
            new ObjectParameter("Codigo", codigo) :
            new ObjectParameter("Codigo", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var fechaNacimientoParameter = fechaNacimiento.HasValue ?
            new ObjectParameter("FechaNacimiento", fechaNacimiento) :
            new ObjectParameter("FechaNacimiento", typeof(System.DateTime));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var gradoEstudioParameter = gradoEstudio != null ?
            new ObjectParameter("GradoEstudio", gradoEstudio) :
            new ObjectParameter("GradoEstudio", typeof(string));


        var ciudadParameter = ciudad.HasValue ?
            new ObjectParameter("Ciudad", ciudad) :
            new ObjectParameter("Ciudad", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var numeroTelefonoParameter = numeroTelefono != null ?
            new ObjectParameter("NumeroTelefono", numeroTelefono) :
            new ObjectParameter("NumeroTelefono", typeof(string));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        var usuarioParameter = usuario != null ?
            new ObjectParameter("Usuario", usuario) :
            new ObjectParameter("Usuario", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditarDocente", idDocenteParameter, codigoParameter, documentoIdentidadParameter, nombresParameter, apellidosParameter, fechaNacimientoParameter, sexoParameter, gradoEstudioParameter, ciudadParameter, direccionParameter, emailParameter, numeroTelefonoParameter, activoParameter, usuarioParameter);
    }


    public virtual int usp_EditarGradoSeccion(Nullable<int> idGradoSeccion, string descripcionGrado, string descripcionSeccion, Nullable<bool> activo, ObjectParameter resultado)
    {

        var idGradoSeccionParameter = idGradoSeccion.HasValue ?
            new ObjectParameter("IdGradoSeccion", idGradoSeccion) :
            new ObjectParameter("IdGradoSeccion", typeof(int));


        var descripcionGradoParameter = descripcionGrado != null ?
            new ObjectParameter("DescripcionGrado", descripcionGrado) :
            new ObjectParameter("DescripcionGrado", typeof(string));


        var descripcionSeccionParameter = descripcionSeccion != null ?
            new ObjectParameter("DescripcionSeccion", descripcionSeccion) :
            new ObjectParameter("DescripcionSeccion", typeof(string));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditarGradoSeccion", idGradoSeccionParameter, descripcionGradoParameter, descripcionSeccionParameter, activoParameter, resultado);
    }


    public virtual int usp_EditarNivel(Nullable<int> idNivel, Nullable<int> idPeriodo, string descripcionNivel, string descripcionTurno, Nullable<System.TimeSpan> horaInicio, Nullable<System.TimeSpan> horaFin, Nullable<bool> activo, ObjectParameter resultado)
    {

        var idNivelParameter = idNivel.HasValue ?
            new ObjectParameter("IdNivel", idNivel) :
            new ObjectParameter("IdNivel", typeof(int));


        var idPeriodoParameter = idPeriodo.HasValue ?
            new ObjectParameter("IdPeriodo", idPeriodo) :
            new ObjectParameter("IdPeriodo", typeof(int));


        var descripcionNivelParameter = descripcionNivel != null ?
            new ObjectParameter("DescripcionNivel", descripcionNivel) :
            new ObjectParameter("DescripcionNivel", typeof(string));


        var descripcionTurnoParameter = descripcionTurno != null ?
            new ObjectParameter("DescripcionTurno", descripcionTurno) :
            new ObjectParameter("DescripcionTurno", typeof(string));


        var horaInicioParameter = horaInicio.HasValue ?
            new ObjectParameter("HoraInicio", horaInicio) :
            new ObjectParameter("HoraInicio", typeof(System.TimeSpan));


        var horaFinParameter = horaFin.HasValue ?
            new ObjectParameter("HoraFin", horaFin) :
            new ObjectParameter("HoraFin", typeof(System.TimeSpan));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditarNivel", idNivelParameter, idPeriodoParameter, descripcionNivelParameter, descripcionTurnoParameter, horaInicioParameter, horaFinParameter, activoParameter, resultado);
    }


    public virtual int usp_EditarPeriodo(Nullable<int> idPeriodo, string descripcion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<bool> activo, ObjectParameter resultado)
    {

        var idPeriodoParameter = idPeriodo.HasValue ?
            new ObjectParameter("IdPeriodo", idPeriodo) :
            new ObjectParameter("IdPeriodo", typeof(int));


        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        var fechaInicioParameter = fechaInicio.HasValue ?
            new ObjectParameter("FechaInicio", fechaInicio) :
            new ObjectParameter("FechaInicio", typeof(System.DateTime));


        var fechaFinParameter = fechaFin.HasValue ?
            new ObjectParameter("FechaFin", fechaFin) :
            new ObjectParameter("FechaFin", typeof(System.DateTime));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditarPeriodo", idPeriodoParameter, descripcionParameter, fechaInicioParameter, fechaFinParameter, activoParameter, resultado);
    }


    public virtual int usp_EliminarAlumno(Nullable<int> idAlumno)
    {

        var idAlumnoParameter = idAlumno.HasValue ?
            new ObjectParameter("IdAlumno", idAlumno) :
            new ObjectParameter("IdAlumno", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarAlumno", idAlumnoParameter);
    }


    public virtual int usp_EliminarCurricula(Nullable<int> idCurricula, ObjectParameter resultado)
    {

        var idCurriculaParameter = idCurricula.HasValue ?
            new ObjectParameter("IdCurricula", idCurricula) :
            new ObjectParameter("IdCurricula", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarCurricula", idCurriculaParameter, resultado);
    }


    public virtual int usp_EliminarDocente(Nullable<int> idDocente, ObjectParameter resultado)
    {

        var idDocenteParameter = idDocente.HasValue ?
            new ObjectParameter("IdDocente", idDocente) :
            new ObjectParameter("IdDocente", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarDocente", idDocenteParameter, resultado);
    }


    public virtual int usp_EliminarDocenteCurso(Nullable<int> idDocenteCurso, ObjectParameter resultado)
    {

        var idDocenteCursoParameter = idDocenteCurso.HasValue ?
            new ObjectParameter("IdDocenteCurso", idDocenteCurso) :
            new ObjectParameter("IdDocenteCurso", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarDocenteCurso", idDocenteCursoParameter, resultado);
    }


    public virtual int usp_EliminarGradoSeccion(Nullable<int> idGradoSeccion, ObjectParameter resultado)
    {

        var idGradoSeccionParameter = idGradoSeccion.HasValue ?
            new ObjectParameter("IdGradoSeccion", idGradoSeccion) :
            new ObjectParameter("IdGradoSeccion", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarGradoSeccion", idGradoSeccionParameter, resultado);
    }


    public virtual int usp_EliminarHorario(Nullable<int> idHorario, ObjectParameter resultado)
    {

        var idHorarioParameter = idHorario.HasValue ?
            new ObjectParameter("IdHorario", idHorario) :
            new ObjectParameter("IdHorario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarHorario", idHorarioParameter, resultado);
    }


    public virtual int usp_EliminarNivel(Nullable<int> idNivel, ObjectParameter resultado)
    {

        var idNivelParameter = idNivel.HasValue ?
            new ObjectParameter("IdNivel", idNivel) :
            new ObjectParameter("IdNivel", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarNivel", idNivelParameter, resultado);
    }


    public virtual int usp_EliminarPeriodo(Nullable<int> idPeriodo, ObjectParameter resultado)
    {

        var idPeriodoParameter = idPeriodo.HasValue ?
            new ObjectParameter("IdPeriodo", idPeriodo) :
            new ObjectParameter("IdPeriodo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarPeriodo", idPeriodoParameter, resultado);
    }


    public virtual int usp_EliminarRol(Nullable<int> idRol, ObjectParameter resultado)
    {

        var idRolParameter = idRol.HasValue ?
            new ObjectParameter("IdRol", idRol) :
            new ObjectParameter("IdRol", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarRol", idRolParameter, resultado);
    }


    public virtual int usp_EliminarUsuario(Nullable<int> idUsuario, ObjectParameter resultado)
    {

        var idUsuarioParameter = idUsuario.HasValue ?
            new ObjectParameter("IdUsuario", idUsuario) :
            new ObjectParameter("IdUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarUsuario", idUsuarioParameter, resultado);
    }


    public virtual ObjectResult<usp_ListarAlumno_Result> usp_ListarAlumno()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarAlumno_Result>("usp_ListarAlumno");
    }


    public virtual ObjectResult<usp_ListarCurso_Result> usp_ListarCurso()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarCurso_Result>("usp_ListarCurso");
    }


    public virtual ObjectResult<usp_ListarCursosAsignados_Result> usp_ListarCursosAsignados()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarCursosAsignados_Result>("usp_ListarCursosAsignados");
    }


    public virtual ObjectResult<usp_ListarDocente_Result> usp_ListarDocente()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarDocente_Result>("usp_ListarDocente");
    }


    public virtual ObjectResult<usp_ListarDocenteCurso_Result> usp_ListarDocenteCurso()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarDocenteCurso_Result>("usp_ListarDocenteCurso");
    }


    public virtual ObjectResult<usp_ListarGradoSeccion_Result> usp_ListarGradoSeccion()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarGradoSeccion_Result>("usp_ListarGradoSeccion");
    }


    public virtual ObjectResult<usp_ListarHorario_Result> usp_ListarHorario()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarHorario_Result>("usp_ListarHorario");
    }


    public virtual ObjectResult<usp_ListarNivel_Result> usp_ListarNivel()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarNivel_Result>("usp_ListarNivel");
    }


    public virtual ObjectResult<usp_ListarNivelDetalle_Result> usp_ListarNivelDetalle()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarNivelDetalle_Result>("usp_ListarNivelDetalle");
    }


    public virtual ObjectResult<usp_ListarPeriodo_Result> usp_ListarPeriodo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarPeriodo_Result>("usp_ListarPeriodo");
    }


    public virtual int usp_LoginUsuario(string usuario, string clave, ObjectParameter idUsuario)
    {

        var usuarioParameter = usuario != null ?
            new ObjectParameter("Usuario", usuario) :
            new ObjectParameter("Usuario", typeof(string));


        var claveParameter = clave != null ?
            new ObjectParameter("Clave", clave) :
            new ObjectParameter("Clave", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoginUsuario", usuarioParameter, claveParameter, idUsuario);
    }


    public virtual int usp_ModificarRol(Nullable<int> idRol, string descripcion, Nullable<bool> activo, ObjectParameter resultado)
    {

        var idRolParameter = idRol.HasValue ?
            new ObjectParameter("IdRol", idRol) :
            new ObjectParameter("IdRol", typeof(int));


        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ModificarRol", idRolParameter, descripcionParameter, activoParameter, resultado);
    }


    public virtual int usp_ModificarUsuario(Nullable<int> idUsuario, string nombres, string apellidos, Nullable<int> idRol, string usuario, string clave, string descripcionReferencia, Nullable<int> idReferencia, Nullable<bool> activo, ObjectParameter resultado)
    {

        var idUsuarioParameter = idUsuario.HasValue ?
            new ObjectParameter("IdUsuario", idUsuario) :
            new ObjectParameter("IdUsuario", typeof(int));


        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var idRolParameter = idRol.HasValue ?
            new ObjectParameter("IdRol", idRol) :
            new ObjectParameter("IdRol", typeof(int));


        var usuarioParameter = usuario != null ?
            new ObjectParameter("Usuario", usuario) :
            new ObjectParameter("Usuario", typeof(string));


        var claveParameter = clave != null ?
            new ObjectParameter("Clave", clave) :
            new ObjectParameter("Clave", typeof(string));


        var descripcionReferenciaParameter = descripcionReferencia != null ?
            new ObjectParameter("DescripcionReferencia", descripcionReferencia) :
            new ObjectParameter("DescripcionReferencia", typeof(string));


        var idReferenciaParameter = idReferencia.HasValue ?
            new ObjectParameter("IdReferencia", idReferencia) :
            new ObjectParameter("IdReferencia", typeof(int));


        var activoParameter = activo.HasValue ?
            new ObjectParameter("Activo", activo) :
            new ObjectParameter("Activo", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ModificarUsuario", idUsuarioParameter, nombresParameter, apellidosParameter, idRolParameter, usuarioParameter, claveParameter, descripcionReferenciaParameter, idReferenciaParameter, activoParameter, resultado);
    }


    public virtual ObjectResult<usp_ObtenerClalificacion_Result> usp_ObtenerClalificacion(Nullable<int> idNivel, Nullable<int> idGradoSeccion, Nullable<int> idCurso, Nullable<int> idAlumno)
    {

        var idNivelParameter = idNivel.HasValue ?
            new ObjectParameter("IdNivel", idNivel) :
            new ObjectParameter("IdNivel", typeof(int));


        var idGradoSeccionParameter = idGradoSeccion.HasValue ?
            new ObjectParameter("IdGradoSeccion", idGradoSeccion) :
            new ObjectParameter("IdGradoSeccion", typeof(int));


        var idCursoParameter = idCurso.HasValue ?
            new ObjectParameter("IdCurso", idCurso) :
            new ObjectParameter("IdCurso", typeof(int));


        var idAlumnoParameter = idAlumno.HasValue ?
            new ObjectParameter("IdAlumno", idAlumno) :
            new ObjectParameter("IdAlumno", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObtenerClalificacion_Result>("usp_ObtenerClalificacion", idNivelParameter, idGradoSeccionParameter, idCursoParameter, idAlumnoParameter);
    }


    public virtual ObjectResult<usp_ObtenerCurricula_Result> usp_ObtenerCurricula(Nullable<int> idNivel, Nullable<int> idGradoSeccion, Nullable<int> idCurso, Nullable<int> idDocente)
    {

        var idNivelParameter = idNivel.HasValue ?
            new ObjectParameter("IdNivel", idNivel) :
            new ObjectParameter("IdNivel", typeof(int));


        var idGradoSeccionParameter = idGradoSeccion.HasValue ?
            new ObjectParameter("IdGradoSeccion", idGradoSeccion) :
            new ObjectParameter("IdGradoSeccion", typeof(int));


        var idCursoParameter = idCurso.HasValue ?
            new ObjectParameter("IdCurso", idCurso) :
            new ObjectParameter("IdCurso", typeof(int));


        var idDocenteParameter = idDocente.HasValue ?
            new ObjectParameter("IdDocente", idDocente) :
            new ObjectParameter("IdDocente", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObtenerCurricula_Result>("usp_ObtenerCurricula", idNivelParameter, idGradoSeccionParameter, idCursoParameter, idDocenteParameter);
    }


    public virtual ObjectResult<string> usp_ObtenerDetalleUsuario(Nullable<int> idUsuario)
    {

        var idUsuarioParameter = idUsuario.HasValue ?
            new ObjectParameter("IdUsuario", idUsuario) :
            new ObjectParameter("IdUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ObtenerDetalleUsuario", idUsuarioParameter);
    }


    public virtual ObjectResult<usp_ObtenerMatricula_Result> usp_ObtenerMatricula()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObtenerMatricula_Result>("usp_ObtenerMatricula");
    }


    public virtual ObjectResult<usp_ObtenerPermisos_Result> usp_ObtenerPermisos(Nullable<int> idRol)
    {

        var idRolParameter = idRol.HasValue ?
            new ObjectParameter("IdRol", idRol) :
            new ObjectParameter("IdRol", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObtenerPermisos_Result>("usp_ObtenerPermisos", idRolParameter);
    }


    public virtual ObjectResult<usp_ObtenerRoles_Result> usp_ObtenerRoles()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObtenerRoles_Result>("usp_ObtenerRoles");
    }


    public virtual ObjectResult<usp_ObtenerUsuario_Result> usp_ObtenerUsuario()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObtenerUsuario_Result>("usp_ObtenerUsuario");
    }


    public virtual int usp_RegistrarAlumno(string nombres, string apellidos, string documentoIdentidad, Nullable<System.DateTime> fechaNacimiento, string sexo, Nullable<int> ciudad, string direccion)
    {

        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var fechaNacimientoParameter = fechaNacimiento.HasValue ?
            new ObjectParameter("FechaNacimiento", fechaNacimiento) :
            new ObjectParameter("FechaNacimiento", typeof(System.DateTime));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var ciudadParameter = ciudad.HasValue ?
            new ObjectParameter("Ciudad", ciudad) :
            new ObjectParameter("Ciudad", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarAlumno", nombresParameter, apellidosParameter, documentoIdentidadParameter, fechaNacimientoParameter, sexoParameter, ciudadParameter, direccionParameter);
    }


    public virtual int usp_RegistrarCalificacion(string xml, ObjectParameter resultado)
    {

        var xmlParameter = xml != null ?
            new ObjectParameter("xml", xml) :
            new ObjectParameter("xml", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarCalificacion", xmlParameter, resultado);
    }


    public virtual int usp_RegistrarCurricula(Nullable<int> idNivel, Nullable<int> idGradoSeccion, Nullable<int> idCurso, Nullable<int> idDocente, string descripcion, ObjectParameter resultado)
    {

        var idNivelParameter = idNivel.HasValue ?
            new ObjectParameter("IdNivel", idNivel) :
            new ObjectParameter("IdNivel", typeof(int));


        var idGradoSeccionParameter = idGradoSeccion.HasValue ?
            new ObjectParameter("IdGradoSeccion", idGradoSeccion) :
            new ObjectParameter("IdGradoSeccion", typeof(int));


        var idCursoParameter = idCurso.HasValue ?
            new ObjectParameter("IdCurso", idCurso) :
            new ObjectParameter("IdCurso", typeof(int));


        var idDocenteParameter = idDocente.HasValue ?
            new ObjectParameter("IdDocente", idDocente) :
            new ObjectParameter("IdDocente", typeof(int));


        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarCurricula", idNivelParameter, idGradoSeccionParameter, idCursoParameter, idDocenteParameter, descripcionParameter, resultado);
    }


    public virtual int usp_RegistrarCurso(string descripcion, string codigo, string nivel)
    {

        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        var codigoParameter = codigo != null ?
            new ObjectParameter("Codigo", codigo) :
            new ObjectParameter("Codigo", typeof(string));


        var nivelParameter = nivel != null ?
            new ObjectParameter("Nivel", nivel) :
            new ObjectParameter("Nivel", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarCurso", descripcionParameter, codigoParameter, nivelParameter);
    }


    public virtual int usp_RegistrarDocente(string documentoIdentidad, string nombres, string apellidos, Nullable<System.DateTime> fechaNacimiento, string sexo, string gradoEstudio, Nullable<int> ciudad, string direccion, string email, string numeroTelefono)
    {

        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var fechaNacimientoParameter = fechaNacimiento.HasValue ?
            new ObjectParameter("FechaNacimiento", fechaNacimiento) :
            new ObjectParameter("FechaNacimiento", typeof(System.DateTime));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var gradoEstudioParameter = gradoEstudio != null ?
            new ObjectParameter("GradoEstudio", gradoEstudio) :
            new ObjectParameter("GradoEstudio", typeof(string));


        var ciudadParameter = ciudad.HasValue ?
            new ObjectParameter("Ciudad", ciudad) :
            new ObjectParameter("Ciudad", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var numeroTelefonoParameter = numeroTelefono != null ?
            new ObjectParameter("NumeroTelefono", numeroTelefono) :
            new ObjectParameter("NumeroTelefono", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarDocente", documentoIdentidadParameter, nombresParameter, apellidosParameter, fechaNacimientoParameter, sexoParameter, gradoEstudioParameter, ciudadParameter, direccionParameter, emailParameter, numeroTelefonoParameter);
    }


    public virtual int usp_RegistrarDocenteCurso(Nullable<int> idNivel, Nullable<int> idGradoSeccion, Nullable<int> idCurso, Nullable<int> idDocente, ObjectParameter resultado)
    {

        var idNivelParameter = idNivel.HasValue ?
            new ObjectParameter("IdNivel", idNivel) :
            new ObjectParameter("IdNivel", typeof(int));


        var idGradoSeccionParameter = idGradoSeccion.HasValue ?
            new ObjectParameter("IdGradoSeccion", idGradoSeccion) :
            new ObjectParameter("IdGradoSeccion", typeof(int));


        var idCursoParameter = idCurso.HasValue ?
            new ObjectParameter("IdCurso", idCurso) :
            new ObjectParameter("IdCurso", typeof(int));


        var idDocenteParameter = idDocente.HasValue ?
            new ObjectParameter("IdDocente", idDocente) :
            new ObjectParameter("IdDocente", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarDocenteCurso", idNivelParameter, idGradoSeccionParameter, idCursoParameter, idDocenteParameter, resultado);
    }


    public virtual int usp_RegistrarGradoSeccion(string descripcionGrado, string descripcionSeccion, ObjectParameter resultado)
    {

        var descripcionGradoParameter = descripcionGrado != null ?
            new ObjectParameter("DescripcionGrado", descripcionGrado) :
            new ObjectParameter("DescripcionGrado", typeof(string));


        var descripcionSeccionParameter = descripcionSeccion != null ?
            new ObjectParameter("DescripcionSeccion", descripcionSeccion) :
            new ObjectParameter("DescripcionSeccion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarGradoSeccion", descripcionGradoParameter, descripcionSeccionParameter, resultado);
    }


    public virtual int usp_RegistrarHorario(Nullable<int> idNivel, Nullable<int> idGradoSeccion, Nullable<int> idCurso, string diaSemana, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaFin, ObjectParameter resultado)
    {

        var idNivelParameter = idNivel.HasValue ?
            new ObjectParameter("IdNivel", idNivel) :
            new ObjectParameter("IdNivel", typeof(int));


        var idGradoSeccionParameter = idGradoSeccion.HasValue ?
            new ObjectParameter("IdGradoSeccion", idGradoSeccion) :
            new ObjectParameter("IdGradoSeccion", typeof(int));


        var idCursoParameter = idCurso.HasValue ?
            new ObjectParameter("IdCurso", idCurso) :
            new ObjectParameter("IdCurso", typeof(int));


        var diaSemanaParameter = diaSemana != null ?
            new ObjectParameter("DiaSemana", diaSemana) :
            new ObjectParameter("DiaSemana", typeof(string));


        var horaInicioParameter = horaInicio.HasValue ?
            new ObjectParameter("HoraInicio", horaInicio) :
            new ObjectParameter("HoraInicio", typeof(System.DateTime));


        var horaFinParameter = horaFin.HasValue ?
            new ObjectParameter("HoraFin", horaFin) :
            new ObjectParameter("HoraFin", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarHorario", idNivelParameter, idGradoSeccionParameter, idCursoParameter, diaSemanaParameter, horaInicioParameter, horaFinParameter, resultado);
    }


    public virtual int usp_RegistrarMatricula(string xml, ObjectParameter resultado)
    {

        var xmlParameter = xml != null ?
            new ObjectParameter("xml", xml) :
            new ObjectParameter("xml", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarMatricula", xmlParameter, resultado);
    }


    public virtual int usp_RegistrarNivel(Nullable<int> idPeriodo, string descripcionNivel, string descripcionTurno, Nullable<System.TimeSpan> horaInicio, Nullable<System.TimeSpan> horaFin, ObjectParameter resultado)
    {

        var idPeriodoParameter = idPeriodo.HasValue ?
            new ObjectParameter("IdPeriodo", idPeriodo) :
            new ObjectParameter("IdPeriodo", typeof(int));


        var descripcionNivelParameter = descripcionNivel != null ?
            new ObjectParameter("DescripcionNivel", descripcionNivel) :
            new ObjectParameter("DescripcionNivel", typeof(string));


        var descripcionTurnoParameter = descripcionTurno != null ?
            new ObjectParameter("DescripcionTurno", descripcionTurno) :
            new ObjectParameter("DescripcionTurno", typeof(string));


        var horaInicioParameter = horaInicio.HasValue ?
            new ObjectParameter("HoraInicio", horaInicio) :
            new ObjectParameter("HoraInicio", typeof(System.TimeSpan));


        var horaFinParameter = horaFin.HasValue ?
            new ObjectParameter("HoraFin", horaFin) :
            new ObjectParameter("HoraFin", typeof(System.TimeSpan));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarNivel", idPeriodoParameter, descripcionNivelParameter, descripcionTurnoParameter, horaInicioParameter, horaFinParameter, resultado);
    }


    public virtual int usp_RegistrarNivelDetalle(string xml, ObjectParameter resultado)
    {

        var xmlParameter = xml != null ?
            new ObjectParameter("xml", xml) :
            new ObjectParameter("xml", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarNivelDetalle", xmlParameter, resultado);
    }


    public virtual int usp_RegistrarPeriodo(string descripcion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, ObjectParameter resultado)
    {

        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        var fechaInicioParameter = fechaInicio.HasValue ?
            new ObjectParameter("FechaInicio", fechaInicio) :
            new ObjectParameter("FechaInicio", typeof(System.DateTime));


        var fechaFinParameter = fechaFin.HasValue ?
            new ObjectParameter("FechaFin", fechaFin) :
            new ObjectParameter("FechaFin", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarPeriodo", descripcionParameter, fechaInicioParameter, fechaFinParameter, resultado);
    }


    public virtual int usp_RegistrarRol(string descripcion, ObjectParameter resultado)
    {

        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarRol", descripcionParameter, resultado);
    }


    public virtual int usp_RegistrarUsuario(string nombres, string apellidos, Nullable<int> idRol, string usuario, string clave, string descripcionReferencia, Nullable<int> idReferencia, ObjectParameter resultado)
    {

        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var idRolParameter = idRol.HasValue ?
            new ObjectParameter("IdRol", idRol) :
            new ObjectParameter("IdRol", typeof(int));


        var usuarioParameter = usuario != null ?
            new ObjectParameter("Usuario", usuario) :
            new ObjectParameter("Usuario", typeof(string));


        var claveParameter = clave != null ?
            new ObjectParameter("Clave", clave) :
            new ObjectParameter("Clave", typeof(string));


        var descripcionReferenciaParameter = descripcionReferencia != null ?
            new ObjectParameter("DescripcionReferencia", descripcionReferencia) :
            new ObjectParameter("DescripcionReferencia", typeof(string));


        var idReferenciaParameter = idReferencia.HasValue ?
            new ObjectParameter("IdReferencia", idReferencia) :
            new ObjectParameter("IdReferencia", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarUsuario", nombresParameter, apellidosParameter, idRolParameter, usuarioParameter, claveParameter, descripcionReferenciaParameter, idReferenciaParameter, resultado);
    }


    public virtual int usp_RegistrarVacantes(string xml, ObjectParameter resultado)
    {

        var xmlParameter = xml != null ?
            new ObjectParameter("xml", xml) :
            new ObjectParameter("xml", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarVacantes", xmlParameter, resultado);
    }


    public virtual ObjectResult<usp_ReporteAlumno_Result> usp_ReporteAlumno(string nombres, string apellidos, string codigo, string documentoIdentidad)
    {

        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var codigoParameter = codigo != null ?
            new ObjectParameter("Codigo", codigo) :
            new ObjectParameter("Codigo", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteAlumno_Result>("usp_ReporteAlumno", nombresParameter, apellidosParameter, codigoParameter, documentoIdentidadParameter);
    }


    public virtual ObjectResult<usp_ReporteMatricula_Result> usp_ReporteMatricula(string codigoMatricula, string situacionMatricula, string codigoAlumno, string documentoIdentidad, string nombres, string apellidos, string periodo, string nivelAcademico, string gradoSeccion)
    {

        var codigoMatriculaParameter = codigoMatricula != null ?
            new ObjectParameter("CodigoMatricula", codigoMatricula) :
            new ObjectParameter("CodigoMatricula", typeof(string));


        var situacionMatriculaParameter = situacionMatricula != null ?
            new ObjectParameter("SituacionMatricula", situacionMatricula) :
            new ObjectParameter("SituacionMatricula", typeof(string));


        var codigoAlumnoParameter = codigoAlumno != null ?
            new ObjectParameter("CodigoAlumno", codigoAlumno) :
            new ObjectParameter("CodigoAlumno", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var periodoParameter = periodo != null ?
            new ObjectParameter("Periodo", periodo) :
            new ObjectParameter("Periodo", typeof(string));


        var nivelAcademicoParameter = nivelAcademico != null ?
            new ObjectParameter("NivelAcademico", nivelAcademico) :
            new ObjectParameter("NivelAcademico", typeof(string));


        var gradoSeccionParameter = gradoSeccion != null ?
            new ObjectParameter("GradoSeccion", gradoSeccion) :
            new ObjectParameter("GradoSeccion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteMatricula_Result>("usp_ReporteMatricula", codigoMatriculaParameter, situacionMatriculaParameter, codigoAlumnoParameter, documentoIdentidadParameter, nombresParameter, apellidosParameter, periodoParameter, nivelAcademicoParameter, gradoSeccionParameter);
    }


    public virtual int SP_ActulizarDocente(Nullable<int> id_docente, string nombre, string apellido, string documentoIdentidad, Nullable<System.DateTime> fechaNacimiento, string sexo, Nullable<int> ciudad, string direccion)
    {

        var id_docenteParameter = id_docente.HasValue ?
            new ObjectParameter("id_docente", id_docente) :
            new ObjectParameter("id_docente", typeof(int));


        var nombreParameter = nombre != null ?
            new ObjectParameter("nombre", nombre) :
            new ObjectParameter("nombre", typeof(string));


        var apellidoParameter = apellido != null ?
            new ObjectParameter("apellido", apellido) :
            new ObjectParameter("apellido", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var fechaNacimientoParameter = fechaNacimiento.HasValue ?
            new ObjectParameter("FechaNacimiento", fechaNacimiento) :
            new ObjectParameter("FechaNacimiento", typeof(System.DateTime));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var ciudadParameter = ciudad.HasValue ?
            new ObjectParameter("Ciudad", ciudad) :
            new ObjectParameter("Ciudad", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActulizarDocente", id_docenteParameter, nombreParameter, apellidoParameter, documentoIdentidadParameter, fechaNacimientoParameter, sexoParameter, ciudadParameter, direccionParameter);
    }


    public virtual int SP_EliminarDocente(Nullable<int> codigo)
    {

        var codigoParameter = codigo.HasValue ?
            new ObjectParameter("codigo", codigo) :
            new ObjectParameter("codigo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarDocente", codigoParameter);
    }


    public virtual int SP_InsertarAlumno(string nombres, string apellidos, string documentoIdentidad, Nullable<System.DateTime> fechaNacimiento, string sexo, string ciudad, string direccion)
    {

        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var fechaNacimientoParameter = fechaNacimiento.HasValue ?
            new ObjectParameter("FechaNacimiento", fechaNacimiento) :
            new ObjectParameter("FechaNacimiento", typeof(System.DateTime));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var ciudadParameter = ciudad != null ?
            new ObjectParameter("Ciudad", ciudad) :
            new ObjectParameter("Ciudad", typeof(string));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarAlumno", nombresParameter, apellidosParameter, documentoIdentidadParameter, fechaNacimientoParameter, sexoParameter, ciudadParameter, direccionParameter);
    }


    public virtual int SP_InsertarDocente(Nullable<int> valorCodigo, string codigo, string documentoIdentidad, string nombres, string apellidos, Nullable<System.DateTime> fechaNacimiento, string sexo, string gradoEstudio, Nullable<int> ciudad, string direccion, string email, string telefono, Nullable<System.DateTime> fechaRegistro)
    {

        var valorCodigoParameter = valorCodigo.HasValue ?
            new ObjectParameter("valorCodigo", valorCodigo) :
            new ObjectParameter("valorCodigo", typeof(int));


        var codigoParameter = codigo != null ?
            new ObjectParameter("codigo", codigo) :
            new ObjectParameter("codigo", typeof(string));


        var documentoIdentidadParameter = documentoIdentidad != null ?
            new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
            new ObjectParameter("DocumentoIdentidad", typeof(string));


        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var fechaNacimientoParameter = fechaNacimiento.HasValue ?
            new ObjectParameter("FechaNacimiento", fechaNacimiento) :
            new ObjectParameter("FechaNacimiento", typeof(System.DateTime));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var gradoEstudioParameter = gradoEstudio != null ?
            new ObjectParameter("gradoEstudio", gradoEstudio) :
            new ObjectParameter("gradoEstudio", typeof(string));


        var ciudadParameter = ciudad.HasValue ?
            new ObjectParameter("Ciudad", ciudad) :
            new ObjectParameter("Ciudad", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));


        var telefonoParameter = telefono != null ?
            new ObjectParameter("telefono", telefono) :
            new ObjectParameter("telefono", typeof(string));


        var fechaRegistroParameter = fechaRegistro.HasValue ?
            new ObjectParameter("fechaRegistro", fechaRegistro) :
            new ObjectParameter("fechaRegistro", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarDocente", valorCodigoParameter, codigoParameter, documentoIdentidadParameter, nombresParameter, apellidosParameter, fechaNacimientoParameter, sexoParameter, gradoEstudioParameter, ciudadParameter, direccionParameter, emailParameter, telefonoParameter, fechaRegistroParameter);
    }


    public virtual ObjectResult<get_top_alumnos_Result> get_top_alumnos(Nullable<int> maximo)
    {

        var maximoParameter = maximo.HasValue ?
            new ObjectParameter("maximo", maximo) :
            new ObjectParameter("maximo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_top_alumnos_Result>("get_top_alumnos", maximoParameter);
    }


    public virtual int set_curso_docente(Nullable<int> idcurso, Nullable<int> iddocente)
    {

        var idcursoParameter = idcurso.HasValue ?
            new ObjectParameter("idcurso", idcurso) :
            new ObjectParameter("idcurso", typeof(int));


        var iddocenteParameter = iddocente.HasValue ?
            new ObjectParameter("iddocente", iddocente) :
            new ObjectParameter("iddocente", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("set_curso_docente", idcursoParameter, iddocenteParameter);
    }


    public virtual int set_imagen_curso(byte[] imagen, Nullable<int> idcurso)
    {

        var imagenParameter = imagen != null ?
            new ObjectParameter("imagen", imagen) :
            new ObjectParameter("imagen", typeof(byte[]));


        var idcursoParameter = idcurso.HasValue ?
            new ObjectParameter("idcurso", idcurso) :
            new ObjectParameter("idcurso", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("set_imagen_curso", imagenParameter, idcursoParameter);
    }


    public virtual ObjectResult<login_usuario_Result> login_usuario(string usuario, string clave)
    {

        var usuarioParameter = usuario != null ?
            new ObjectParameter("usuario", usuario) :
            new ObjectParameter("usuario", typeof(string));


        var claveParameter = clave != null ?
            new ObjectParameter("clave", clave) :
            new ObjectParameter("clave", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<login_usuario_Result>("login_usuario", usuarioParameter, claveParameter);
    }


    public virtual ObjectResult<sp_filtroAlumno_Result> sp_filtroAlumno(string apellidos)
    {

        var apellidosParameter = apellidos != null ?
            new ObjectParameter("apellidos", apellidos) :
            new ObjectParameter("apellidos", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_filtroAlumno_Result>("sp_filtroAlumno", apellidosParameter);
    }


    public virtual ObjectResult<sp_filtroDocente_Result> sp_filtroDocente(string apellidos)
    {

        var apellidosParameter = apellidos != null ?
            new ObjectParameter("apellidos", apellidos) :
            new ObjectParameter("apellidos", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_filtroDocente_Result>("sp_filtroDocente", apellidosParameter);
    }


    public virtual ObjectResult<sp_ListarDistritos_Result> sp_ListarDistritos()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarDistritos_Result>("sp_ListarDistritos");
    }


    public virtual ObjectResult<usp_ConsultarUsuario_Result> usp_ConsultarUsuario(string login_Usuario)
    {

        var login_UsuarioParameter = login_Usuario != null ?
            new ObjectParameter("Login_Usuario", login_Usuario) :
            new ObjectParameter("Login_Usuario", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarUsuario_Result>("usp_ConsultarUsuario", login_UsuarioParameter);
    }


    public virtual ObjectResult<Nullable<int>> get_rol(string loginUsuario, string loginClave)
    {

        var loginUsuarioParameter = loginUsuario != null ?
            new ObjectParameter("LoginUsuario", loginUsuario) :
            new ObjectParameter("LoginUsuario", typeof(string));


        var loginClaveParameter = loginClave != null ?
            new ObjectParameter("LoginClave", loginClave) :
            new ObjectParameter("LoginClave", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_rol", loginUsuarioParameter, loginClaveParameter);
    }


    public virtual int usp_EliminarCurso(Nullable<int> idCurso)
    {

        var idCursoParameter = idCurso.HasValue ?
            new ObjectParameter("IdCurso", idCurso) :
            new ObjectParameter("IdCurso", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarCurso", idCursoParameter);
    }


    public virtual ObjectResult<get_notas_Result2> get_notas(Nullable<int> iDCurso, Nullable<int> iDAlumno, Nullable<int> iDPeriodo)
    {

        var iDCursoParameter = iDCurso.HasValue ?
            new ObjectParameter("IDCurso", iDCurso) :
            new ObjectParameter("IDCurso", typeof(int));


        var iDAlumnoParameter = iDAlumno.HasValue ?
            new ObjectParameter("IDAlumno", iDAlumno) :
            new ObjectParameter("IDAlumno", typeof(int));


        var iDPeriodoParameter = iDPeriodo.HasValue ?
            new ObjectParameter("IDPeriodo", iDPeriodo) :
            new ObjectParameter("IDPeriodo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_notas_Result2>("get_notas", iDCursoParameter, iDAlumnoParameter, iDPeriodoParameter);
    }


    public virtual ObjectResult<string> usp_ListarNombresDocentes()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ListarNombresDocentes");
    }


    public virtual ObjectResult<usp_DetalleCursoNivel_Result1> usp_DetalleCursoNivel(Nullable<int> iDCurso)
    {

        var iDCursoParameter = iDCurso.HasValue ?
            new ObjectParameter("IDCurso", iDCurso) :
            new ObjectParameter("IDCurso", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DetalleCursoNivel_Result1>("usp_DetalleCursoNivel", iDCursoParameter);
    }

}

}

